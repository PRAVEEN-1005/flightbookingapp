name: Django CI/CD
 
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
 
jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
 
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint bandit pylint-django
 
      - name: Run migrations
        run: python manage.py migrate
        working-directory: flightbooking
 
      - name: Run Pylint
        run: |
          pylint --rcfile=../.pylintrc bookings || true
        working-directory: flightbooking
 
      - name: Run Bandit
        run: |
          cd flightbooking
          bandit -r bookings || true
 
  deploy:
    needs: build
    runs-on: ubuntu-latest
 
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt update
            sudo apt install -y python3-venv git
 
            # Ensure the app directory exists
            mkdir -p /home/ubuntu/flightbookingapp-main
            cd /home/ubuntu/flightbookingapp-main
 
            # Clone if missing, otherwise pull updates
            if [ ! -d ".git" ]; then
              git clone https://github.com/PRAVEEN-1005/django-flight-booking.git .
            else
              git fetch origin main
              git reset --hard origin/main
            fi
 
            # Setup virtual environment
            if [ ! -d "venv" ]; then
              python3 -m venv venv
            fi
 
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r flightbooking/requirements.txt
 
            # Apply migrations (just in case)
            cd flightbooking
            python manage.py migrate --noinput
            cd ..
 
            # Restart Gunicorn service
            sudo systemctl daemon-reload
            sudo systemctl restart gunicorn
            sudo systemctl status gunicorn --no-pager